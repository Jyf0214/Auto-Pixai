name: Docker Image CI

on:
  push:
    branches: ["release", "main"]
  pull_request:
    branches: ["release"]

jobs:
  tag:
    runs-on: ubuntu-latest
    outputs:
      latest_tag: ${{ steps.latest_tag.outputs.tag }}
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4
      - name: Show tags
        id: latest_tag
        run: |
          git fetch --tags
          latest_tag=$(git describe --tags $(git rev-list --tags --max-count=1))
          echo "tag=$latest_tag" >> "$GITHUB_OUTPUT"
          echo "💡 Latest tag: $latest_tag"
      - name: check tag
        run: |
          # 获取 package.json 中的版本号
          package_version=$(node -e "console.log(require('./package.json').version)")
          # 获取 GitHub 上的最新标签号

          git fetch --tags
          latest_tag=$(git describe --tags $(git rev-list --tags --max-count=1))

          # 比较版本号是否相等
          if [ "$package_version" != "$latest_tag" ]; then
            echo "❌ Package.json version does not match latest tag"
            
            # 設置身份
            git config user.email "lion31lion31@gmail.com"
            git config user.name "Github Actions"

            # 使用 Personal Access Token 进行身份验证
            git config credential.helper store

            # 创建新标签并推送到 GitHub
            git tag -a "$package_version" -m "Release $package_version"
            git push origin "$package_version"

            # 创建 GitHub 发布
            hub release create -m "Release $package_version" "$package_version"
          else
            echo "✅ Package.json version matches latest tag: $package_version"
          fi
        env:
          PAT_TOKEN: ${{ secrets.PAT_TOKEN }}
  docker-build:
    if: github.ref == 'refs/heads/release'
    runs-on: ubuntu-latest
    needs: [tag]
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push tag
        # env:
        #   TAG: ${{needs.tag.outputs.latest_tag}}
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: smile0301/auto-pixai:${{needs.tag.outputs.latest_tag}}
      - name: Build and push latest
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: smile0301/auto-pixai:latest
